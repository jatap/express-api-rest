#!/usr/bin/env bash

TEMPLATE_PATH="$1/generator"
PROJECT_PATH=$(pwd)
PROJECT_NAME=`basename $(pwd)`

units=(".babelrc.js" \
  ".env.sample" \
  ".eslintrc" \
  ".eslintignore" \
  ".gitignore" \
  ".npmrc" \
  ".prettierrc" \
  ".vscode" \
  ".huskyrc" \
  ".lintstagedrc" \
  "package.json" \
  "server" \
  "config" \
  "tests" \
  "automation" \
  "docker-compose.yml" \
  "Dockerfile.api" \
  "Dockerfile.db" \
  ".dockerignore" \
  "jest.config.js" \
  "cz-customizable.js" \
  "nodemon.json" \
  "README.md")

touch README.md
git init
git add README.md
git commit -am 'chore(init): first sending'

echo -e "\e[1;32m\n>> Git repo has been initialized\e[1;37m\n"

echo -e "\e[1;32m>> Adding a new Express API REST project based on ES6 defaults to ${PROJECT_PATH}...\n"

alias cp="cp"

for unit in "${units[@]}"
do
  echo -e "\e[0;37mCopying ${unit}..."
  if [ $unit = "README.md" ]; then
    cp -Rf ${TEMPLATE_PATH}/${unit} ${PROJECT_PATH}/README.md
  elif [ $unit = "package.json" ]; then
    cp -Rf ${TEMPLATE_PATH}/${unit} ${PROJECT_PATH}/package.json
  else
    cp -Rf ${TEMPLATE_PATH}/${unit} ${PROJECT_PATH}
  fi
done

echo -e "\e[1;32m\n>> Files has been successfully copied to ${PROJECT_PATH}\n"

rewrites=("package.json" "README.md" "server/index.js" ".env.sample" "docker-compose.yml" "automation/db/provision.js" "Dockerfile.db" "Dockerfile.api")

for rewrite in "${rewrites[@]}"
do
  echo -e "\e[0;37mRewriting ${rewrite}..."
  sed -i '' -e "s|XXX|${PROJECT_NAME}|g" "${PROJECT_PATH}/${rewrite}"
  # sed -i '' -e "s|ZZZ|${PROJECT_NAME}|g" "${PROJECT_PATH}/${rewrite}"
  sed -i '' -e "s|AAA|db|g" "${PROJECT_PATH}/${rewrite}"
  sed -i '' -e "s|BBB|27017|g" "${PROJECT_PATH}/${rewrite}"
  sed -i '' -e "s|CCC|keyUser|g" "${PROJECT_PATH}/${rewrite}"
  sed -i '' -e "s|DDD|keyPass|g" "${PROJECT_PATH}/${rewrite}"
  sed -i '' -e "s|EEE|3000|g" "${PROJECT_PATH}/${rewrite}"
done

echo -e "\e[1;32m\n>> Files has been successfully rewrited in ${PROJECT_PATH}\n"

npm install

echo -e "\e[1;32m\n>> Packages have been installed\e[0;37m\n"

cp .env.sample .env

echo -e "\e[1;32m\n>> Generated .env file from .env.sample file\e[0;37m\n"

npm run generate:salt

echo -e "\e[1;32m\n>> Generated hash_salt environment variable\e[0;37m\n"

git add .
git commit -am 'chore(init): first update'

echo -e "\e[1;32m\n>> Git repo has been updated\e[1;37m\n"

ls -la

echo -e "\e[1;32m\n>> Project has been sucessfully created\e[1;37m\n"

alias cp="cp -i"
